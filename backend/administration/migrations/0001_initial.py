# Generated by Django 3.2.9 on 2021-12-22 22:24

import administration.validators
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Administrator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('root', models.BooleanField(default=False)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True)),
                ('staff', models.BooleanField(default=False)),
                ('admin', models.BooleanField(default=False)),
                ('superuser', models.BooleanField(default=False)),
                ('username', models.CharField(error_messages={'blank': 'Username field is mandatory.', 'invalid': 'Enter the correct username value. It must contain 4 to 32 digits, letters and special characters -, _ or spaces.', 'null': 'Username field is mandatory.'}, max_length=32, unique=True, validators=[administration.validators.UsernameValueValidator()])),
                ('password', models.CharField(error_messages={'blank': 'Password field is mandatory.', 'invalid': 'Enter the correct password value. It requires at least one lowercase letter, one uppercase letter, one digit and one special character, minimum 8 characters.', 'null': 'Password field is mandatory.'}, max_length=128, validators=[administration.validators.PasswordValueValidator()])),
                ('email', models.EmailField(blank=True, max_length=128, null=True, unique=True)),
                ('first_name', models.CharField(max_length=32)),
                ('middle_name', models.CharField(max_length=128)),
                ('last_name', models.CharField(max_length=128)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Access',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('root', models.BooleanField(default=False)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(error_messages={'blank': 'Name field is mandatory.', 'invalid': 'Enter the correct name value. It must contain 4 to 32 digits, letters and special characters -, _ or spaces.', 'null': 'Name field is mandatory.'}, max_length=32, unique=True, validators=[administration.validators.NameValueValidator()])),
            ],
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('root', models.BooleanField(default=False)),
                ('deleted', models.BooleanField(default=False)),
                ('administrator', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
